#summary Coding Standards for the Dead 6 Core Technology

= Introduction =

It is RenEvo Software & Design's belief that by utilizing and abiding to certain coding standards, all of our products will reach their designated milestone dates due to an inherited ease in team communication. By utilizing strict naming and commenting standards - as well as general rules - all pieces of technology developed by different members of the team can be interpreted with relative ease by all other members in and out of said development team. Furthermore, technology re-explored at a later time can easily be interpreted and incorporated into future projects with little to no reengineering. It is also believed that a universal language will aid external developing teams who wish to use the Core for their own projects.

Below you will find outlines that encompass all areas of naming standards including variable prefixing, class/structure naming, function naming, and standard file naming. All classes and structures laid out in the technology plan must also obey certain standard rules. These rules will be discussed in detail in the following pages. Commenting standards from file headers and class member function headers to general commenting rules will also be outlined in detail. Finally, all general coding rules to be practiced by all members on the Command & Crysis: The Dead 6 development team are discussed and explained.

= Sections =
 * [TechDoc_CodingStandards_NamingStandards Naming Standards]
 * [TechDoc_CodingStandards_PrefixConvention Variable Name/Prefix Convention]
 * [TechDoc_CodingStandards_StructClass Structures and Classes]
 * [TechDoc_CodingStandards_RelFuncName Relevant Function Names]
 * [TechDoc_CodingStandards_MacrosConstants Macros and Constants]
 * [TechDoc_CodingStandards_Commenting Commenting Standards]
 * [TechDoc_CodingStandards_CodingGeneral General Coding Standards]

[TechDoc Return to Front Page]
